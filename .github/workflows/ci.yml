name: CI

on:
  workflow_dispatch:
env:
  TZ: Asia/Shanghai
  

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      
      - name: 初始化仓库
        id: init
        run: |
          echo "mydir=$(pwd)" > /tmp/conf.me
          git clone https://github.com/biliwala/nanopi-openwrt.git
          cd nanopi-openwrt
          echo "dir=$(pwd)" >> /tmp/conf.me
          
      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          . /tmp/conf.me
          cd $dir
          . 1_initialization_environment.sh
      
      - name: 克隆源码
        run: |
          . /tmp/conf.me
          cd $dir
          . 2_clone_source.sh master-v19.07.1 rk3328
          
      - name: 内核打补丁
        run: |
          . /tmp/conf.me
          cd $dir
          . patch_kernel_5.4.sh
          
      - name: 打补丁
        run: |
          . /tmp/conf.me
          chmod 777 yamlParse
          ./yamlParse -in ${dir}/.github/workflows/r2s_lean_minimal.yml -ex myApp.txt -out ${dir}/mods.sh
          cd $dir
          . mods.sh
          
      - name: 编译FriendlyWrt
        run: |
          . /tmp/conf.me
          cd $dir
          . 4_build_image.sh friendlywrt-rk3328 nanopi_r2s.mk
          
      - name: 打包固件
        id: assemble_artifact
        run: |
          . /tmp/conf.me
          cd $dir
          . x_assemble_artifact.sh
          mv ./artifact.zip $mydir
          release_tag="R2S-supppig-$(date +%Y%m%d-%H%M%S)"
          echo "##[set-output name=release_tag;]$release_tag"
          
      - name: 创建Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false

      - name: 上传Release附件
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
          
      - name: 删除旧Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 5
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
          
